version: '3'
services:

  dsw-server:
    image: datastewardshipwizard/wizard-server:4.0
    platform: linux/amd64
    restart: always
    ports:
    # (!!) Expose only for local deployment, externally use HTTPS proxy
      - 127.0.0.1:3000:3000
    depends_on:
      - postgres
      - minio
    volumes:
      - ./config/application.yml:/app/config/application.yml:ro
    extra_hosts:
      - host.docker.internal:host-gateway

  dsw-client:
    image: datastewardshipwizard/wizard-client:4.0
    restart: always
    ports:
    # (!!) Expose only for local deployment, externally use HTTPS proxy
      - 127.0.0.1:8080:8080
    environment:
      API_URL: http://localhost:3000/wizard-api

  docworker:
    image: datastewardshipwizard/document-worker:4.0
    restart: always
    depends_on:
      - postgres
      - minio
      - dsw-server
    volumes:
      - ./config/application.yml:/app/config/application.yml:ro
    extra_hosts:
      - host.docker.internal:host-gateway

  mailer:
    image: datastewardshipwizard/mailer:4.0
    restart: always
    depends_on:
      - postgres
      - dsw-server
    volumes:
      - ./config/application.yml:/app/config/application.yml:ro

  postgres:
    image: postgres:15.5
    restart: always
    # (!!) Expose only for debugging locally
    # ports:
    #   - 127.0.0.1:5432:5432
    # (!!) Change default password
    environment:
      POSTGRES_DB: engine-wizard
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # (!!) Mount for persistent data
    # volumes:
    #  - db-data:/var/lib/postgresql/data
    # OR
    #  - ./db-data/data:/var/lib/postgresql/data

  minio:
    image: minio/minio:RELEASE.2022-02-24T22-12-01Z
    restart: always
    command: server /data --console-address ":9001"
    # (!!) Expose only for debugging locally, externally use HTTPS proxy (see MinIO docs)
    ports:
      - 9000:9000
      - 9001:9001
    # (!!) Change default password
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minioPassword
    # (!!) Mount and backup for persistent data
    # volumes:
    #  - s3-data:/data
    # OR
    #  - ./s3-data/data:/data

# volumes:
#   db-data:
#   s3-data:
